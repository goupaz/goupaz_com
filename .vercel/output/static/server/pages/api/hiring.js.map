{"version":3,"file":"pages/api/hiring.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./src/pages/api/hiring.ts","webpack://_N_E/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/error.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/get-hostname.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/next-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/request.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/response.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/internal-utils.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js","webpack://_N_E/./node_modules/next/dist/esm/client/components/app-router-headers.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/adapter.js","webpack://_N_E/<anon>"],"sourcesContent":["\n        import { adapter, enhanceGlobals } from 'next/dist/esm/server/web/adapter'\n\n        enhanceGlobals()\n\n        var mod = require(\"private-next-pages/api/hiring.ts\")\n        var handler = mod.middleware || mod.default;\n\n        if (typeof handler !== 'function') {\n          throw new Error('The Edge Function \"pages/api/hiring\" must export a `default` function');\n        }\n\n        export default function (opts) {\n          return adapter({\n              ...opts,\n              page: \"/api/hiring\",\n              handler,\n          })\n        }\n    ","// Next.js Edge API Routes: https://nextjs.org/docs/api-routes/edge-api-routes\nimport type { NextRequest } from 'next/server'\n\nexport const config = {\n  runtime: 'edge',\n}\n\nexport default async function handler(req: NextRequest) {\n  return new Response(\n    JSON.stringify({\n      name: 'Hiring - Coming soon...',\n    }),\n    {\n      status: 200,\n      headers: {\n        'content-type': 'application/json',\n      },\n    }\n  )\n}","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction serialize(c) {\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && c.expires && `Expires=${c.expires.toUTCString()}`,\n    \"maxAge\" in c && c.maxAge && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`\n  ].filter(Boolean);\n  return `${c.name}=${encodeURIComponent(c.value ?? \"\")}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookieString(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value ?? \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookieString(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookieString(setCookie);\n  const { domain, expires, httponly, maxage, path, samesite, secure } = Object.fromEntries(\n    attributes.map(([key, value2]) => [key.toLowerCase(), value2])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookieString(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => serialize(value2)).join(\"; \")\n    );\n    return this;\n  }\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => serialize(value)).join(\"; \")\n    );\n    return result;\n  }\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a;\n    this._headers = responseHeaders;\n    const setCookie = ((_a = responseHeaders.getAll) == null ? void 0 : _a.call(responseHeaders, \"set-cookie\")) ?? responseHeaders.get(\"set-cookie\") ?? [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookieString(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  delete(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this.set({ name, value: \"\", expires: new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(serialize).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = serialize(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies\n});\n","export class PageSignatureError extends Error {\n    constructor({ page  }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nexport class RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nexport class RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map","export function fromNodeHeaders(object) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(object)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (typeof v === \"undefined\") continue;\n            if (typeof v === \"number\") {\n                v = v.toString();\n            }\n            headers.append(key, v);\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ export function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\nexport function toNodeHeaders(headers) {\n    const result = {};\n    const cookies = [];\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            if (key.toLowerCase() === \"set-cookie\") {\n                // We may have gotten a comma joined string of cookies, or multiple\n                // set-cookie headers. We need to merge them into one header array\n                // to represent all the cookies.\n                cookies.push(...splitCookiesString(value));\n                result[key] = cookies.length === 1 ? cookies[0] : cookies;\n            } else {\n                result[key] = value;\n            }\n        }\n    }\n    return result;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ export function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n}\n\n//# sourceMappingURL=utils.js.map","import { PageSignatureError } from \"../error\";\nconst responseSymbol = Symbol(\"response\");\nconst passThroughSymbol = Symbol(\"passThrough\");\nexport const waitUntilSymbol = Symbol(\"waitUntil\");\nclass FetchEvent {\n    [waitUntilSymbol] = [];\n    [passThroughSymbol] = false;\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(_request){}\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        this[waitUntilSymbol].push(promise);\n    }\n}\nexport class NextFetchEvent extends FetchEvent {\n    constructor(params){\n        super(params.request);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\n\n//# sourceMappingURL=fetch-event.js.map","export function detectDomainLocale(domainItems, hostname, detectedLocale) {\n    if (!domainItems) return;\n    if (detectedLocale) {\n        detectedLocale = detectedLocale.toLowerCase();\n    }\n    for (const item of domainItems){\n        var ref, ref1;\n        // remove port if present\n        const domainHostname = (ref = item.domain) == null ? void 0 : ref.split(':')[0].toLowerCase();\n        if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n            return item;\n        }\n    }\n}\n\n//# sourceMappingURL=detect-domain-locale.js.map","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ export function removeTrailingSlash(route) {\n    return route.replace(/\\/$/, '') || '/';\n}\n\n//# sourceMappingURL=remove-trailing-slash.js.map","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ export function parsePath(path) {\n    const hashIndex = path.indexOf('#');\n    const queryIndex = path.indexOf('?');\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : '',\n            hash: hashIndex > -1 ? path.slice(hashIndex) : ''\n        };\n    }\n    return {\n        pathname: path,\n        query: '',\n        hash: ''\n    };\n}\n\n//# sourceMappingURL=parse-path.js.map","import { parsePath } from './parse-path';\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */ export function addPathPrefix(path, prefix) {\n    if (!path.startsWith('/') || !prefix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${prefix}${pathname}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-prefix.js.map","import { parsePath } from './parse-path';\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */ export function addPathSuffix(path, suffix) {\n    if (!path.startsWith('/') || !suffix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${pathname}${suffix}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-suffix.js.map","import { parsePath } from './parse-path';\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */ export function pathHasPrefix(path, prefix) {\n    if (typeof path !== 'string') {\n        return false;\n    }\n    const { pathname  } = parsePath(path);\n    return pathname === prefix || pathname.startsWith(prefix + '/');\n}\n\n//# sourceMappingURL=path-has-prefix.js.map","import { addPathPrefix } from './add-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */ export function addLocale(path, locale, defaultLocale, ignorePrefix) {\n    // If no locale was given or the locale is the default locale, we don't need\n    // to prefix the path.\n    if (!locale || locale === defaultLocale) return path;\n    const lower = path.toLowerCase();\n    // If the path is an API path or the path already has the locale prefix, we\n    // don't need to prefix the path.\n    if (!ignorePrefix) {\n        if (pathHasPrefix(lower, '/api')) return path;\n        if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path;\n    }\n    // Add the locale prefix to the path.\n    return addPathPrefix(path, `/${locale}`);\n}\n\n//# sourceMappingURL=add-locale.js.map","import { removeTrailingSlash } from './remove-trailing-slash';\nimport { addPathPrefix } from './add-path-prefix';\nimport { addPathSuffix } from './add-path-suffix';\nimport { addLocale } from './add-locale';\nexport function formatNextPathnameInfo(info) {\n    let pathname = addLocale(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = removeTrailingSlash(pathname);\n    }\n    if (info.buildId) {\n        pathname = addPathSuffix(addPathPrefix(pathname, `/_next/data/${info.buildId}`), info.pathname === '/' ? 'index.json' : '.json');\n    }\n    pathname = addPathPrefix(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith('/') ? addPathSuffix(pathname, '/') : pathname : removeTrailingSlash(pathname);\n}\n\n//# sourceMappingURL=format-next-pathname-info.js.map","/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */ export function getHostname(parsed, headers) {\n    // Get the hostname from the headers if it exists, otherwise use the parsed\n    // hostname.\n    let hostname;\n    if ((headers == null ? void 0 : headers.host) && !Array.isArray(headers.host)) {\n        hostname = headers.host.toString().split(':')[0];\n    } else if (parsed.hostname) {\n        hostname = parsed.hostname;\n    } else return;\n    return hostname.toLowerCase();\n}\n\n//# sourceMappingURL=get-hostname.js.map","/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */ export function normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split('/');\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join('/') || '/';\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n}\n\n//# sourceMappingURL=normalize-locale-path.js.map","import { pathHasPrefix } from './path-has-prefix';\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */ export function removePathPrefix(path, prefix) {\n    // If the path doesn't start with the prefix we can return it as is. This\n    // protects us from situations where the prefix is a substring of the path\n    // prefix such as:\n    //\n    // For prefix: /blog\n    //\n    //   /blog -> true\n    //   /blog/ -> true\n    //   /blog/1 -> true\n    //   /blogging -> false\n    //   /blogging/ -> false\n    //   /blogging/1 -> false\n    if (!pathHasPrefix(path, prefix)) {\n        return path;\n    }\n    // Remove the prefix from the path via slicing.\n    const withoutPrefix = path.slice(prefix.length);\n    // If the path without the prefix starts with a `/` we can return it as is.\n    if (withoutPrefix.startsWith('/')) {\n        return withoutPrefix;\n    }\n    // If the path without the prefix doesn't start with a `/` we need to add it\n    // back to the path to make sure it's a valid path.\n    return `/${withoutPrefix}`;\n}\n\n//# sourceMappingURL=remove-path-prefix.js.map","import { normalizeLocalePath } from '../../i18n/normalize-locale-path';\nimport { removePathPrefix } from './remove-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\nexport function getNextPathnameInfo(pathname, options) {\n    var _nextConfig;\n    const { basePath , i18n , trailingSlash  } = (_nextConfig = options.nextConfig) != null ? _nextConfig : {};\n    const info = {\n        pathname: pathname,\n        trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash\n    };\n    if (basePath && pathHasPrefix(info.pathname, basePath)) {\n        info.pathname = removePathPrefix(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    if (options.parseData === true && info.pathname.startsWith('/_next/data/') && info.pathname.endsWith('.json')) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, '').replace(/\\.json$/, '').split('/');\n        const buildId = paths[0];\n        info.pathname = paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/';\n        info.buildId = buildId;\n    }\n    // If provided, use the locale route normalizer to detect the locale instead\n    // of the function below.\n    if (options.i18nProvider) {\n        const result = options.i18nProvider.analyze(info.pathname);\n        info.locale = result.detectedLocale;\n        var _pathname;\n        info.pathname = (_pathname = result.pathname) != null ? _pathname : info.pathname;\n    } else if (i18n) {\n        const pathLocale = normalizeLocalePath(info.pathname, i18n.locales);\n        info.locale = pathLocale.detectedLocale;\n        var _pathname1;\n        info.pathname = (_pathname1 = pathLocale.pathname) != null ? _pathname1 : info.pathname;\n    }\n    return info;\n}\n\n//# sourceMappingURL=get-next-pathname-info.js.map","import { detectDomainLocale } from \"../../shared/lib/i18n/detect-domain-locale\";\nimport { formatNextPathnameInfo } from \"../../shared/lib/router/utils/format-next-pathname-info\";\nimport { getHostname } from \"../../shared/lib/get-hostname\";\nimport { getNextPathnameInfo } from \"../../shared/lib/router/utils/get-next-pathname-info\";\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|::1|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nexport class NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyze();\n    }\n    analyze() {\n        var ref, ref1, ref2, ref3, ref4;\n        const info = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = getHostname(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : detectDomainLocale((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref1 = ref.i18n) == null ? void 0 : ref1.domains, hostname);\n        const defaultLocale = ((ref2 = this[Internal].domainLocale) == null ? void 0 : ref2.defaultLocale) || ((ref3 = this[Internal].options.nextConfig) == null ? void 0 : (ref4 = ref3.i18n) == null ? void 0 : ref4.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? \"\";\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var ref, ref5;\n        if (!this[Internal].locale || !((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref5 = ref.i18n) == null ? void 0 : ref5.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map","export * from \"next/dist/compiled/@edge-runtime/cookies\";\n\n//# sourceMappingURL=cookies.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { RemovedUAError, RemovedPageError } from \"../error\";\nimport { RequestCookies } from \"./cookies\";\nexport const INTERNALS = Symbol(\"internal request\");\nexport class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n        validateURL(url);\n        super(url, init);\n        const nextUrl = new NextURL(url, {\n            headers: toNodeHeaders(this.headers),\n            nextConfig: init.nextConfig\n        });\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            geo: init.geo || {},\n            ip: init.ip,\n            nextUrl,\n            url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE ? url : nextUrl.toString()\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            geo: this.geo,\n            ip: this.ip,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get geo() {\n        return this[INTERNALS].geo;\n    }\n    get ip() {\n        return this[INTERNALS].ip;\n    }\n    get nextUrl() {\n        return this[INTERNALS].nextUrl;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url;\n    }\n}\n\n//# sourceMappingURL=request.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { ResponseCookies } from \"./cookies\";\nconst INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var ref;\n    if (init == null ? void 0 : (ref = init.request) == null ? void 0 : ref.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error(\"request.headers must be an instance of Headers\");\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set(\"x-middleware-request-\" + key, value);\n            keys.push(key);\n        }\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n    }\n}\nexport class NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        this[INTERNALS] = {\n            cookies: new ResponseCookies(this.headers),\n            url: init.url ? new NextURL(init.url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        // @ts-expect-error This is not in lib/dom right now, and we can't augment it.\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === \"object\" ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set(\"Location\", validateURL(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-rewrite\", validateURL(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-next\", \"1\");\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\n\n//# sourceMappingURL=response.js.map","/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */ export function relativizeURL(url, base) {\n    const baseURL = typeof base === 'string' ? new URL(base) : base;\n    const relative = new URL(url, base);\n    const origin = `${baseURL.protocol}//${baseURL.host}`;\n    return `${relative.protocol}//${relative.host}` === origin ? relative.toString().replace(origin, '') : relative.toString();\n}\n\n//# sourceMappingURL=relativize-url.js.map","const INTERNAL_QUERY_NAMES = [\n    \"__nextFallback\",\n    \"__nextLocale\",\n    \"__nextInferredLocaleFromDefault\",\n    \"__nextDefaultLocale\",\n    \"__nextIsNotFound\", \n];\nconst EXTENDED_INTERNAL_QUERY_NAMES = [\n    \"__nextDataReq\"\n];\nexport function stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nexport function stripInternalSearchParams(searchParams, extended) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        searchParams.delete(name);\n    }\n    if (extended) {\n        for (const name of EXTENDED_INTERNAL_QUERY_NAMES){\n            searchParams.delete(name);\n        }\n    }\n    return searchParams;\n}\n\n//# sourceMappingURL=internal-utils.js.map","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash';\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */ export function normalizeAppPath(route) {\n    return ensureLeadingSlash(route.split('/').reduce((pathname, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return pathname;\n        }\n        // Groups are ignored.\n        if (segment.startsWith('(') && segment.endsWith(')')) {\n            return pathname;\n        }\n        // Parallel segments are ignored.\n        if (segment.startsWith('@')) {\n            return pathname;\n        }\n        // The last segment (if it's a leaf) should be ignored.\n        if ((segment === 'page' || segment === 'route') && index === segments.length - 1) {\n            return pathname;\n        }\n        return `${pathname}/${segment}`;\n    }, ''));\n}\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */ export function normalizeRscPath(pathname, enabled) {\n    return enabled ? pathname.replace(/\\.rsc($|\\?)/, // $1 ensures `?` is preserved\n    '$1') : pathname;\n}\n\n//# sourceMappingURL=app-paths.js.map","export const RSC = 'RSC';\nexport const ACTION = 'Next-Action';\nexport const NEXT_ROUTER_STATE_TREE = 'Next-Router-State-Tree';\nexport const NEXT_ROUTER_PREFETCH = 'Next-Router-Prefetch';\nexport const NEXT_URL = 'Next-Url';\nexport const FETCH_CACHE_HEADER = 'x-vercel-sc-headers';\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component';\nexport const RSC_VARY_HEADER = `${RSC}, ${NEXT_ROUTER_STATE_TREE}, ${NEXT_ROUTER_PREFETCH}`;\nexport const FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ], \n];\n\n//# sourceMappingURL=app-router-headers.js.map","import { PageSignatureError } from \"./error\";\nimport { fromNodeHeaders } from \"./utils\";\nimport { NextFetchEvent } from \"./spec-extension/fetch-event\";\nimport { NextRequest } from \"./spec-extension/request\";\nimport { NextResponse } from \"./spec-extension/response\";\nimport { relativizeURL } from \"../../shared/lib/router/utils/relativize-url\";\nimport { waitUntilSymbol } from \"./spec-extension/fetch-event\";\nimport { NextURL } from \"./next-url\";\nimport { stripInternalSearchParams } from \"../internal-utils\";\nimport { normalizeRscPath } from \"../../shared/lib/router/utils/app-paths\";\nimport { FETCH_CACHE_HEADER, NEXT_ROUTER_PREFETCH, NEXT_ROUTER_STATE_TREE, RSC } from \"../../client/components/app-router-headers\";\nclass NextRequestHint extends NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ],\n    [\n        FETCH_CACHE_HEADER\n    ], \n];\nexport async function adapter(params) {\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\n    params.request.url = normalizeRscPath(params.request.url, true);\n    const requestUrl = new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = \"\";\n    const isDataReq = params.request.headers[\"x-nextjs-data\"];\n    if (isDataReq && requestUrl.pathname === \"/index\") {\n        requestUrl.pathname = \"/\";\n    }\n    const requestHeaders = fromNodeHeaders(params.request.headers);\n    const flightHeaders = new Map();\n    // Parameters should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const param of FLIGHT_PARAMETERS){\n            const key = param.toString().toLowerCase();\n            const value = requestHeaders.get(key);\n            if (value) {\n                flightHeaders.set(key, requestHeaders.get(key));\n                requestHeaders.delete(key);\n            }\n        }\n    }\n    // Strip internal query parameters off the request.\n    stripInternalSearchParams(requestUrl.searchParams, true);\n    const request = new NextRequestHint({\n        page: params.page,\n        input: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE ? params.request.url : String(requestUrl),\n        init: {\n            body: params.request.body,\n            geo: params.request.geo,\n            headers: requestHeaders,\n            ip: params.request.ip,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isDataReq) {\n        Object.defineProperty(request, \"__isData\", {\n            enumerable: false,\n            value: true\n        });\n    }\n    const event = new NextFetchEvent({\n        request,\n        page: params.page\n    });\n    let response = await params.handler(request, event);\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError(\"Expected an instance of Response to be returned\");\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\n    if (response && rewrite) {\n        const rewriteUrl = new NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ const relativizedRewrite = relativizeURL(String(rewriteUrl), String(requestUrl));\n        if (isDataReq && // if the rewrite is external and external rewrite\n        // resolving config is enabled don't add this header\n        // so the upstream app can set it instead\n        !(process.env.__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE && relativizedRewrite.match(/http(s)?:\\/\\//))) {\n            response.headers.set(\"x-nextjs-rewrite\", relativizedRewrite);\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get(\"Location\");\n    if (response && redirect) {\n        const redirectURL = new NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set(\"Location\", String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isDataReq) {\n            response.headers.delete(\"Location\");\n            response.headers.set(\"x-nextjs-redirect\", relativizeURL(String(redirectURL), String(requestUrl)));\n        }\n    }\n    const finalResponse = response ? response : NextResponse.next();\n    // Flight headers are not overridable / removable so they are applied at the end.\n    const middlewareOverrideHeaders = finalResponse.headers.get(\"x-middleware-override-headers\");\n    const overwrittenHeaders = [];\n    if (middlewareOverrideHeaders) {\n        for (const [key, value] of flightHeaders){\n            finalResponse.headers.set(`x-middleware-request-${key}`, value);\n            overwrittenHeaders.push(key);\n        }\n        if (overwrittenHeaders.length > 0) {\n            finalResponse.headers.set(\"x-middleware-override-headers\", middlewareOverrideHeaders + \",\" + overwrittenHeaders.join(\",\"));\n        }\n    }\n    return {\n        response: finalResponse,\n        waitUntil: Promise.all(event[waitUntilSymbol])\n    };\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === \"then\") {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === \"function\") {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nexport function enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== global.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = global.process.env;\n        global.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, \"__import_unsupported\", {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n    if (\"_ENTRIES\" in globalThis && _ENTRIES.middleware_instrumentation && _ENTRIES.middleware_instrumentation.register) {\n        try {\n            _ENTRIES.middleware_instrumentation.register();\n        } catch (err) {\n            err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n            throw err;\n        }\n    }\n}\n\n//# sourceMappingURL=adapter.js.map"],"names":["next_dist_esm_server_web_adapter__WEBPACK_IMPORTED_MODULE_0__","g","mod","__webpack_require__","handler","middleware","default","__WEBPACK_DEFAULT_EXPORT__","opts","V","page","config","runtime","req","Response","JSON","stringify","name","status","headers","__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__toCommonJS","value","src_exports","serialize","c","attrs","path","expires","toUTCString","maxAge","domain","secure","httpOnly","sameSite","filter","Boolean","encodeURIComponent","join","parseCookieString","cookie","map","Map","pair","split","splitAt","indexOf","slice","set","decodeURIComponent","parseSetCookieString","setCookie","attributes","httponly","maxage","samesite","fromEntries","value2","toLowerCase","Date","Number","parseSameSite","compact","t","newT","__export","target","all","RequestCookies","ResponseCookies","module","exports","SAME_SITE","string","includes","constructor","requestHeaders","_parsed","_headers","header","parsed","Symbol","iterator","size","args","getAll","_a","Array","length","_","n","has","delete","names","result","isArray","clear","keys","for","toString","values","v","responseHeaders","cookieStrings","splitCookiesString","cookieString","normalizeCookie","replace","bag","serialized","append","now","cookiesString","start","ch","lastComma","nextStart","cookiesSeparatorFound","cookiesStrings","pos","skipWhitespace","test","charAt","push","substring","PageSignatureError","Error","RemovedPageError","RemovedUAError","fromNodeHeaders","object","Headers","entries","toNodeHeaders","cookies","validateURL","url","String","URL","error","cause","responseSymbol","passThroughSymbol","waitUntilSymbol","FetchEvent","_request","respondWith","response","Promise","resolve","passThroughOnException","waitUntil","promise","NextFetchEvent","params","request","sourcePage","detectDomainLocale","domainItems","hostname","detectedLocale","item","ref","ref1","domainHostname","defaultLocale","locales","some","locale","removeTrailingSlash","route","parsePath","hashIndex","queryIndex","hasQuery","pathname","query","undefined","hash","addPathPrefix","prefix","startsWith","addPathSuffix","suffix","pathHasPrefix","addLocale","ignorePrefix","lower","formatNextPathnameInfo","info","buildId","trailingSlash","basePath","endsWith","getHostname","host","normalizeLocalePath","pathnameParts","splice","removePathPrefix","withoutPrefix","getNextPathnameInfo","options","_nextConfig","_pathname","_pathname1","i18n","nextConfig","parseData","paths","i18nProvider","analyze","pathLocale","REGEX_LOCALHOST_HOSTNAME","parseURL","base","Internal","NextURL","input","baseOrOpts","ref2","ref3","ref4","domainLocale","domains","formatPathname","forceLocale","formatSearch","search","ref5","searchParams","port","protocol","href","origin","password","username","toJSON","clone","INTERNALS","NextRequest","Request","init","nextUrl","geo","ip","bodyUsed","cache","credentials","destination","integrity","keepalive","method","mode","redirect","referrer","referrerPolicy","signal","ua","response_INTERNALS","REDIRECTS","Set","handleMiddlewareField","NextResponse","body","ok","redirected","statusText","type","json","initObj","rewrite","next","relativizeURL","baseURL","relative","INTERNAL_QUERY_NAMES","EXTENDED_INTERNAL_QUERY_NAMES","stripInternalSearchParams","extended","normalizeRscPath","enabled","NextRequestHint","adapter_FLIGHT_PARAMETERS","adapter","isEdgeRendering","self","__BUILD_MANIFEST","requestUrl","isDataReq","flightHeaders","param","event","rewriteUrl","relativizedRewrite","redirectURL","finalResponse","middlewareOverrideHeaders","overwrittenHeaders","getUnsupportedModuleErrorMessage","__import_unsupported","moduleName","proxy","Proxy","_obj","prop","construct","apply","_target","_this","enhanceGlobals","process","env","globalThis","configurable","_ENTRIES","middleware_instrumentation","register","err","message"],"sourceRoot":""}